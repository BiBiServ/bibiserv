
package de.unibi.cebitec.bibiserv.sequence.parser;

import java.util.List;

/**
 * The basic interface for all XMLParser
 * @author Thomas Gatter
 */
public interface XMLParser {
    
     /**
     * Reads and validates the full stream. All read data from
     * input must be written to output immediately!
     * @exception SequenceParserException if stream is not valid
     */
    public void parseAndValidate() throws SequenceParserException, ForcedAbortOfPartValidation;

    /**
     * Return all warnings generated by parser.
     *
     * @return
     */
    public List<String> getWarnings();
    
     /**
     * Setting this will abort the validation with an exception after x chars are read.
     * It will be thrown exactly when the char X was read and NOT when it was validated.
     * Since only new data is read when the previous chars are validated this
     * means that always about X-Y chars are indeed validated and Y much smaller
     * X. WARNING: The exact amount of read chars is not deterministic, but
     * rather depends on the availability in the stream and the data itself.
     *
     * @param x Number of chars to read before aborting the validation process.
     */
    public void setMaximumCharsToValidate(int x);
    
}
